{"version":3,"sources":["components/wrapper.js","components/Nav/Nav.js","components/header.js","components/game.js","components/card/Card.js","App.js","index.js"],"names":["Wrapper","props","className","children","Nav","score","topScore","Header","note","Game","Card","onClick","cardClick","id","alt","name","src","image","App","state","cards","displayCards","sortCards","sort","a","b","Math","random","console","log","undefined","find","card","setState","newCardsList","filter","this","map","Component","ReactDOM","render","document","getElementById"],"mappings":"i3DAIeA,EAFC,SAACC,GAAD,OAAW,qBAAKC,UAAU,UAAf,SAA0BD,EAAME,YCU5CC,G,MATH,SAACH,GAAD,OACV,qBAAIC,UAAU,eAAd,UACE,oBAAIA,UAAU,8BAAd,0BACA,qBAAIA,UAAU,+BAAd,oBACUD,EAAMI,MADhB,kBACsCJ,EAAMK,iBCCjCC,EANA,SAACN,GAAD,OACb,8BACE,oBAAIC,UAAU,cAAd,SAA6BD,EAAMO,UCAxBC,EAFF,SAACR,GAAD,OAAW,qBAAKC,UAAU,YAAf,SAA4BD,EAAME,YCS3CO,G,MARF,SAACT,GAAD,OACX,qBAAKC,UAAU,eAAf,SACE,mBAAGS,QAAS,kBAAMV,EAAMW,UAAUX,EAAMY,KAAxC,SACE,qBAAKC,IAAKb,EAAMc,KAAMC,IAAKf,EAAMgB,c,OCqExBC,E,4MAjEbC,MAAQ,CACNC,QACAC,aAAcD,EACdf,MAAO,EACPC,SAAU,EACVE,KAAM,iD,EAGRc,UAAY,WACVF,EAAMG,MAAK,SAAUC,EAAGC,GACtB,MAAO,GAAMC,KAAKC,a,EAItBf,UAAY,SAACC,GAMX,GALAe,QAAQC,IAAI,EAAKV,MAAMC,OACvBQ,QAAQC,IAAI,EAAKV,MAAME,mBAIFS,IAFA,EAAKX,MAAME,aAAaU,MAAK,SAACC,GAAD,OAAUA,EAAKnB,KAAOA,KAGtE,EAAKoB,SAAS,CACZZ,aAAcD,EACdd,SACE,EAAKa,MAAMd,MAAQ,EAAKc,MAAMb,SAC1B,EAAKa,MAAMd,MACX,EAAKc,MAAMb,SACjBD,MAAO,EACPG,KAAM,cAEH,CACL,IAAM0B,EAAe,EAAKf,MAAME,aAAac,QAC3C,SAACH,GAAD,OAAUA,EAAKnB,KAAOA,KAGxB,EAAKoB,SAAS,CACZZ,aAAca,EACd7B,MAAO,EAAKc,MAAMd,MAAQ,EAC1BG,KAAM,gBAGV,EAAKc,a,4CAGP,WAAU,IAAD,OACP,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAKjB,MAAO+B,KAAKjB,MAAMd,MAAOC,SAAU8B,KAAKjB,MAAMb,WACnD,cAAC,EAAD,CAAQE,KAAM4B,KAAKjB,MAAMX,OACzB,cAAC,EAAD,UACG4B,KAAKjB,MAAMC,MAAMiB,KAAI,SAACL,GAAD,OACpB,cAAC,EAAD,CACEpB,UAAW,EAAKA,UAChBC,GAAImB,EAAKnB,GAETE,KAAMiB,EAAKjB,KACXE,MAAOe,EAAKf,OAFPe,EAAKnB,gB,GAvDNyB,a,MCHlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.736be157.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Wrapper = (props) => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Nav = (props) => (\n  <ul className=\"nav nav-fill\">\n    <li className=\"nav-item nav-text text-left\">Clicky Game.</li>\n    <li className=\"nav-item nav-text text-right\">\n      Score: {props.score} | High score: {props.topScore}\n    </li>\n  </ul>\n);\n\nexport default Nav;\n","import React from \"react\";\n\nconst Header = (props) => (\n  <div>\n    <h5 className=\"text-center\">{props.note}</h5>\n  </div>\n);\n\nexport default Header;\n","import React from \"react\";\n\nconst Game = (props) => <div className=\"container\">{props.children}</div>;\n\nexport default Game;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Card = (props) => (\n  <div className=\"card mx-auto\">\n    <a onClick={() => props.cardClick(props.id)}>\n      <img alt={props.name} src={props.image} />\n    </a>\n  </div>\n);\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Wrapper from \"./components/wrapper\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/header\";\nimport Game from \"./components/game\";\nimport Card from \"./components/card/Card\";\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n  state = {\n    cards,\n    displayCards: cards,\n    score: 0,\n    topScore: 0,\n    note: \"Don't click the same photo twice or you lose.\",\n  };\n\n  sortCards = () => {\n    cards.sort(function (a, b) {\n      return 0.5 - Math.random();\n    });\n  };\n\n  cardClick = (id) => {\n    console.log(this.state.cards);\n    console.log(this.state.displayCards);\n\n    const clickedCards = this.state.displayCards.find((card) => card.id === id);\n\n    if (clickedCards === undefined) {\n      this.setState({\n        displayCards: cards,\n        topScore:\n          this.state.score > this.state.topScore\n            ? this.state.score\n            : this.state.topScore,\n        score: 0,\n        note: \"Nope!\",\n      });\n    } else {\n      const newCardsList = this.state.displayCards.filter(\n        (card) => card.id !== id\n      );\n\n      this.setState({\n        displayCards: newCardsList,\n        score: this.state.score + 1,\n        note: \"Good guess.\",\n      });\n    }\n    this.sortCards();\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Nav score={this.state.score} topScore={this.state.topScore} />\n        <Header note={this.state.note} />\n        <Game>\n          {this.state.cards.map((card) => (\n            <Card\n              cardClick={this.cardClick}\n              id={card.id}\n              key={card.id}\n              name={card.name}\n              image={card.image}\n            />\n          ))}\n        </Game>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n// import serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// serviceWorker();\n"],"sourceRoot":""}